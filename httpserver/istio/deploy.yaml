apiVersion: v1
kind: ConfigMap
metadata:
  name: httpserver-cm
data:
  VERSION: "1.0.0"
  WEB_SERVICE_NAME: "httpservice"
  LOG_LEVEL: "debug"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpserver
spec:
  replicas: 1 #副本数
  selector:
    matchLabels:
      app: httpserver #匹配label
  template:
    metadata:
      labels: #定义label
        app: httpserver
        release: none
    spec:
      terminationGracePeriodSeconds: 30 #保证最终正常处理完成后再关闭
      containers:
        - name: httpserver
          imagePullPolicy: IfNotPresent
          image: lendea/httpserver:v1.1
          ports:
            - containerPort: 8080
          env:
            - name: VERSION # 从configmap中获取VERSION
              valueFrom:
                configMapKeyRef:
                  name: httpserver-cm
                  key: VERSION
            - name: LOG_LEVEL # 从configmap中获取日志等级
              valueFrom:
                configMapKeyRef:
                  key: LOG_LEVEL
                  name: httpserver-cm
          resources: #资源需求和 QoS 保证
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 250m
              memory: 250Mi
          readinessProbe: #探活
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          lifecycle:
            postStart: #优雅启动：当一个容器启动后，Kubernetes 将立即发送 postStart 事件； 容器创建成功后，运行前的任务，用于资源部署、环境准备等。
              exec:
                command:
                  - /bin/sh
                  - -c
                  - echo 'Hello from the postStart handler' >> /tmp/message
            preStop: #优雅退出：在容器被终结之前， Kubernetes 将发送一个 preStop 事件。在容器被终止前的任务，用于优雅关闭应用程序、通知其他系统等等
              exec:
                command:
                  - /bin/sh
                  - -c
                  - echo 'Hello from the preStop handler' >> /tmp/message

---

apiVersion: v1
kind: Service
metadata:
  name: httpserver-svc
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app: httpserver
